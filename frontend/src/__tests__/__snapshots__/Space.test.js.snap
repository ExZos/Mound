// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Space should render MessageSpace with props and session 1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="static"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(Typography))
        className="userName"
      >
        user2
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space2
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <MessageSpace
    updateState={[Function]}
    user={
      Object {
        "id": 2,
        "name": "user2",
        "poll": 2,
        "space": 2,
        "space_name": "space2",
        "space_status": true,
      }
    }
  />
</div>
`;

exports[`Space should render PendingSpace with props and session 1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="static"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(Typography))
        className="userName"
      >
        userundefined
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space3
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <PendingSpace
    updateState={[Function]}
    user={
      Object {
        "name": "userundefined",
        "poll": 3,
        "space": 3,
        "space_name": "space3",
        "space_status": false,
      }
    }
  />
</div>
`;

exports[`Space should render PendingUser with props and session  1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="static"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(Typography))
        className="userName"
      >
        userundefined
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space3
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <PendingUser
    updateState={[Function]}
    user={
      Object {
        "name": "userundefined",
        "poll": 3,
        "space": 3,
        "space_name": "space3",
        "space_status": true,
      }
    }
  />
</div>
`;

exports[`Space should render correctly with props but no session 1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="static"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space1
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <div>
    <form
      id="getUserInSpaceByName"
      onSubmit={[Function]}
    >
      <input
        autoFocus={true}
        name="name"
        onChange={[Function]}
        placeholder="Type a user name..."
        type="text"
        value=""
      />
      <button
        onClick={[Function]}
        tabIndex="-1"
      >
        ENTER
      </button>
    </form>
    <ConfirmDialog
      confirm={[Function]}
      mBody="Do you want to request to join this space as ''"
      mHeader="User '' does not exist"
      showModal={false}
      toggleModal={[Function]}
    />
  </div>
</div>
`;
