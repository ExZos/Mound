// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Space should render MessageSpace with props and session 1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="sticky"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(IconButton))
        className="openMenu"
        onClick={[Function]}
        tabIndex="-1"
      >
        <MenuIcon />
      </WithStyles(ForwardRef(IconButton))>
      <WithStyles(ForwardRef(Menu))
        anchorOrigin={
          Object {
            "horizontal": "left",
            "vertical": "bottom",
          }
        }
        getContentAnchorEl={null}
        id="spaceNavMenu"
        onClose={[Function]}
        open={false}
        transformOrigin={
          Object {
            "horizontal": "left",
            "vertical": "top",
          }
        }
      >
        <WithStyles(ForwardRef(MenuItem))
          disabled={true}
        >
          user2
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Messages
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Polls
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Change Name
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(Menu))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space2
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
        tabIndex="-1"
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <MessageSpace
    updateState={[Function]}
    user={
      Object {
        "id": 2,
        "name": "user2",
        "poll": 2,
        "space": 2,
        "space_name": "space2",
        "space_status": true,
      }
    }
  />
</div>
`;

exports[`Space should render PendingSpace with props and session 1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="sticky"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(IconButton))
        className="openMenu"
        onClick={[Function]}
        tabIndex="-1"
      >
        <MenuIcon />
      </WithStyles(ForwardRef(IconButton))>
      <WithStyles(ForwardRef(Menu))
        anchorOrigin={
          Object {
            "horizontal": "left",
            "vertical": "bottom",
          }
        }
        getContentAnchorEl={null}
        id="spaceNavMenu"
        onClose={[Function]}
        open={false}
        transformOrigin={
          Object {
            "horizontal": "left",
            "vertical": "top",
          }
        }
      >
        <WithStyles(ForwardRef(MenuItem))
          disabled={true}
        >
          userundefined
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Messages
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Polls
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Change Name
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(Menu))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space3
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
        tabIndex="-1"
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <PendingSpace
    updateState={[Function]}
    user={
      Object {
        "name": "userundefined",
        "poll": 3,
        "space": 3,
        "space_name": "space3",
        "space_status": false,
      }
    }
  />
</div>
`;

exports[`Space should render PendingUser with props and session  1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="sticky"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(IconButton))
        className="openMenu"
        onClick={[Function]}
        tabIndex="-1"
      >
        <MenuIcon />
      </WithStyles(ForwardRef(IconButton))>
      <WithStyles(ForwardRef(Menu))
        anchorOrigin={
          Object {
            "horizontal": "left",
            "vertical": "bottom",
          }
        }
        getContentAnchorEl={null}
        id="spaceNavMenu"
        onClose={[Function]}
        open={false}
        transformOrigin={
          Object {
            "horizontal": "left",
            "vertical": "top",
          }
        }
      >
        <WithStyles(ForwardRef(MenuItem))
          disabled={true}
        >
          userundefined
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Messages
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Polls
        </WithStyles(ForwardRef(MenuItem))>
        <WithStyles(ForwardRef(MenuItem))
          onClick={[Function]}
        >
          Change Name
        </WithStyles(ForwardRef(MenuItem))>
      </WithStyles(ForwardRef(Menu))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space3
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
        tabIndex="-1"
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <PendingUser
    updateState={[Function]}
    user={
      Object {
        "name": "userundefined",
        "poll": 3,
        "space": 3,
        "space_name": "space3",
        "space_status": true,
      }
    }
  />
</div>
`;

exports[`Space should render correctly with props but no session 1`] = `
<div
  id="space"
>
  <Sidebar />
  <WithStyles(ForwardRef(AppBar))
    position="sticky"
  >
    <WithStyles(ForwardRef(Toolbar))>
      <WithStyles(ForwardRef(Typography))
        className="spaceName"
      >
        space1
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(IconButton))
        aria-label="close"
        className="closeSpace"
        onClick={[Function]}
        tabIndex="-1"
      >
        <CloseIcon />
      </WithStyles(ForwardRef(IconButton))>
    </WithStyles(ForwardRef(Toolbar))>
  </WithStyles(ForwardRef(AppBar))>
  <br />
  <div>
    <form
      id="getUserInSpaceByName"
      onSubmit={[Function]}
    >
      <div
        className="textFieldWButton"
      >
        <WithStyles(ForwardRef(TextField))
          autoFocus={true}
          label="Type a user name..."
          name="name"
          onChange={[Function]}
          size="small"
          value=""
          variant="outlined"
        />
        <WithStyles(ForwardRef(Button))
          color="primary"
          onClick={[Function]}
          size="small"
          tabIndex="-1"
          type="submit"
          variant="outlined"
        >
          ENTER
        </WithStyles(ForwardRef(Button))>
      </div>
    </form>
    <ConfirmDialog
      confirm={[Function]}
      mBody="Do you want to request to join this space as ''"
      mHeader="User '' does not exist"
      showModal={false}
      toggleModal={[Function]}
    />
  </div>
</div>
`;
